{"version":3,"sources":["components/Item.js","components/ItemsContainer.js","components/authantication/Login.js","components/MainPage.js","components/Navbar.js","components/CartItem.js","components/CartPage.js","components/ItemPage.js","components/ThankyouPage.js","components/authantication/Signup.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","state","item","Box","align","margin","Card","style","width","Img","variant","src","this","img","Body","Title","Text","size","name","Paragraph","desc","price","to","id","Button","icon","Cart","color","focusIndicator","primary","fill","label","Component","ItemsContainer","items","setState","itemsList","i","push","Col","key","clickHandler","length","alignContent","border","Row","generateItems","Login","basis","focusFirstChild","validation","validators","required","email","direction","justify","RoutedAnchor","path","description","minLength","alphaNumeric","inField","pad","vertical","hoverIndicator","onClick","signin","alignSelf","gap","MainPage","filterVal","visibleItems","e","filteredItems","filter","toLowerCase","includes","target","value","console","log","Grommet","FormLabel","InputGroup","sice","FormControl","onChange","filterHandler","placeholder","aria-label","aria-describedby","CartItem","TableRow","TableCell","scope","textAlign","quantity","Close","CartPage","cart","generateCart","table","stateCart","forEach","itemRemover","Table","TableHeader","TableBody","checkOut","newCart","className","ItemPage","allItems","itemId","match","params","theItem","newItem","height","Image","fit","handleChange","type","addItem","ThankyouPage","Checkmark","Signup","equalsField","controlLabel","True","App","loggedin","navCon","bind","removeItem","checkout","randItems","Faker","title","finance","amount","image","food","lorem","paragraph","random","number","logout","curCart","plain","data-toggle","data-target","aria-controls","aria-expanded","Anchor","reverse","Stack","anchor","background","horizontal","round","renderCon","exact","component","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c0e16a4.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Box ,Button,Text, Paragraph} from 'grommet'\nimport {Cart} from 'grommet-icons'\nimport {Card} from 'react-bootstrap'\n\nimport '../css/style.css'\nimport { Link } from 'react-router-dom'\n\nexport default class Item extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = props.item\n    }\n    \n\n\n\n    render() {\n        return (\n            <Box align='stretch' margin='small'>\n\n<Card style={{ width: '20rem' }} >\n  <Card.Img variant=\"top\" src={this.state.img} />\n  <Card.Body>\n        <Card.Title> <Text size='xlarge'>{this.state.name}</Text> </Card.Title>\n    <Card.Text>\n\n        <Paragraph size='medium'>{this.state.desc}</Paragraph>\n    </Card.Text>\n        <Card.Text>Price: {this.state.price} SR</Card.Text>\n        <Link to={`/item/${this.state.id}`}> <Button\n    icon={<Cart />}\n    color='accent-1'\n    focusIndicator='false'\n    primary\n    fill='true'\n  label= 'View Page'\n   \n/></Link>\n    \n  </Card.Body>\n</Card>\n\n             </Box>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Item from './Item'\nimport { Box } from 'grommet'\nimport {Container, Col, Row} from 'react-bootstrap'\nimport '../css/style.css'\n// import items from '../itemsList'\nimport Faker from 'faker'\nexport default class ItemsContainer extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            items: []\n        }\n    }\n\n\n    componentDidMount(){\n       \n        \n        this.setState({\n            items: this.props.items\n        })\n    }\n\n    \n\n    generateItems(){\n        // console.log(this.state.items,\"i am that func\")\n\n\n\n        let itemsList = []\n        for (let i = 0; i < this.state.items.length;i++){\n            \n            itemsList.push(\n                <Col>\n                <Item key={this.state.items[i].id} item={this.state.items[i]} clickHandler={()=> this.props.clickHandler(this.state.items[i])}/>\n                </Col>\n              \n            \n            )\n            // console.log(i)\n            // i+=3\n    \n    \n        }\n\n        return itemsList\n\n    }\n\n    render() {\n\n        return (\n            <Box margin='xlarge' alignContent='center' border='all'>\n                \n            <Row>\n\n\n\n            {this.generateItems()}\n            </Row>\n            </Box>\n            \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Box, Text, RoutedAnchor , Button} from 'grommet';\nimport { Form ,PasswordInputField, EmailInputField, CheckBoxField, validators } from 'grommet-controls'\nimport { Link } from 'react-router-dom';\nexport default class Login extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n\n    render() {\n        return (\n            <Box align=\"center\" >\n\n            <Box align='center' margin='large' >\n\n            <Form\n    basis='medium'\n    focusFirstChild={false}\n    \n  >\n    <EmailInputField\n      label='Email'\n      name='email'\n      validation={[validators.required(), validators.email()]}\n    />\n    <PasswordInputField\n      label={(\n        <Box direction='row' align='center' justify='between'>\n          Password\n          <RoutedAnchor path='/reset_password' size='small' label='Forgot password?' />\n        </Box>\n      )}\n      description='Password'\n      name='password'\n      validation={\n        [validators.required(), validators.minLength(5), validators.alphaNumeric()]\n      }\n    />\n    <CheckBoxField\n      label='Remember me'\n      name='rememberme'\n      inField={false}\n    />\n    <Box pad={{ vertical: 'medium' }} align='end'>\n     <Link to='/'> <Button hoverIndicator='background' primary={true} onClick={()=>this.props.signin()} label='Save profile' /></Link>\n    </Box>\n    <Box direction='row' alignSelf='center' gap='small' align='center'>\n      <Text>\n        {'Don\\'t have an account yet?'}\n      </Text>\n      <RoutedAnchor path='/signup' label='Sign up' />\n      </Box>\n  </Form>\n    </Box>\n  </Box>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Grommet, Box } from 'grommet'\nimport ItemsContainer from './ItemsContainer'\nimport { InputGroup, FormControl, FormLabel} from 'react-bootstrap'\nimport Login from './authantication/Login'\n\nexport default class MainPage extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            filterVal: '',\n            items: props.items,\n            visibleItems: props.items\n        }\n    }\n\n\n\nfilterHandler(e){\n\n    let filteredItems = this.props.items.filter(item => item.name.toLowerCase().includes(e.target.value.toLowerCase()))\n    console.log(filteredItems, 'filter')\n    // console.log(this.state.visibleItems, 'before')\n\n    this.setState({\n      visibleItems: filteredItems,\n      filterVal: e.target.value\n    })\n  \n  }\n\n  \n\n    render() {\n        return (\n            <Grommet>\n                \n\n<Box margin='large' border='all'>\n    <FormLabel>Filter It</FormLabel>\n\n<InputGroup sice='lg'>\n<FormControl\n    onChange={e => this.filterHandler(e)}\n    value={this.state.filterVal}\n  placeholder=\"Filter\"\n  aria-label=\"Search\"\n  aria-describedby=\"basic-addon2\"\n  size='lg'\n/>\n</InputGroup>\n\n        </Box>\n                <ItemsContainer items={this.state.visibleItems} clickHandler={this.props.clickHandler}/>\n                \n\n            </Grommet>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Grommet, Anchor, Box, Stack, Text} from 'grommet'\nimport {Cart} from 'grommet-icons'\nimport { Link } from 'react-router-dom';\n\n// import {Navbar, Nav, Button, Form, FormControl, NavDropdown} from 'react-bootstrap'\n\nexport default class TheNavbar extends Component {\n\n\n    constructor(props){\n        super(props)\n       \n    }\n\n    \n\n    render() {\n\n        \n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <a className=\"navbar-brand\" href=\"#\">Azzam's Shop</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">About</a>\n      </li>\n\n     \n\n    </ul>\n\n    <Anchor size='large' reverse label={ <Link to='/cart'>Your Cart</Link>} icon={<Stack anchor=\"top-right\">\n  <Cart size=\"large\" />\n  <Box\n    background=\"brand\"\n    pad={{ horizontal: 'xsmall' }}\n    round\n  >\n    <Text>{this.props.cartNum}</Text>\n  </Box>\n</Stack>}/>\n    \n  </div>\n</nav>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { TableRow,TableCell ,Text,Button} from 'grommet'\nimport {Close} from 'grommet-icons'\n\nexport default class CartItem extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n\n    \n\n    render() {\n        return (\n            <TableRow>\n            <TableCell scope=\"row\">\n                    <Text textAlign='center' size='large'> {this.props.item.name} </Text>\n                    </TableCell>\n        <TableCell> <Text textAlign='center' size='large'>{this.props.item.price}SR</Text></TableCell>\n                    <TableCell><Text textAlign='center' size='large'> {this.props.item.quantity} </Text></TableCell>\n        <TableCell> <Text textAlign='center' size='large'> {this.props.item.price * this.props.item.quantity}SR</Text></TableCell>\n                    <TableCell> <Button icon={<Close/>} onClick={()=> this.props.clickHandler(this.props.item)}/> </TableCell>\n                  </TableRow>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Box, TableHeader, TableRow, TableCell, Table, TableBody, Text,Button } from 'grommet'\nimport '../css/style.css'\nimport {Close} from 'grommet-icons'\nimport CartItem from './CartItem'\n// import { Button } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nexport default class CartPage extends Component {\n\n\n\n\n    constructor(props){\n        super(props)\n        this.state = {\n            cart: []\n        }\n\n    }\n\n    \n\n    componentDidMount(){\n\n        this.setState({\n            cart: this.props.cart\n        } ,  this.generateCart)\n       \n    }\n\n    generateCart(){\n\n\n        \n\n        let stateCart = this.state.cart\n        \n        let table\n        if(stateCart.length == 0)\n            table = <h1> is Empty</h1>\n\n            else{\n                \n                let cart = []\n        stateCart.forEach((i,key) => {\n            cart.push(\n                <CartItem key={key} item={i} clickHandler={() => this.props.itemRemover(i)}/>\n              )\n        })\n\n        table = <Box> <Table alignSelf='center'>\n  <TableHeader>\n    <TableRow>\n\n      <TableCell size='medium' scope=\"col\" border=\"bottom\">\n       <Text textAlign='center' size='large'>  Item </Text>\n      </TableCell>\n\n      <TableCell scope=\"col\" border=\"bottom\">\n      <Text textAlign='center' size='large'> Price</Text>\n      </TableCell>\n\n      <TableCell scope=\"col\" border=\"bottom\">\n      <Text textAlign='center' size='large'>Quantity</Text>\n      </TableCell>\n\n      <TableCell scope=\"col\" border=\"bottom\">\n      <Text textAlign='center' size='large'> Total</Text>\n      </TableCell>\n\n    </TableRow>\n  </TableHeader>\n  <TableBody>\n\n                {\n                    cart\n                }\n\n  </TableBody>\n</Table>\n\n <Link to='/thanks'> <Button onClick={()=>this.props.checkOut()} label='Checkout'/></Link>\n</Box>\n    }\n        return table\n    }\n\n    removeItem(item){\n\n        \n        let currentCart = this.state.cart\n\n        let newCart = currentCart.filter(i => {\n            return i.name != item.name\n        })\n\n        this.setState({\n            cart: newCart\n        })\n    }\n\n\n    render() {\n        \n        return (\n            <Box border='all' align='center' alignContent='center' margin='large'>\n\n            <h1 className='m-5'>Your Cart</h1>\n\n\n            <Box>\n            \n            {this.generateCart()}\n\n\n            {/* <Box margin='large'> */}\n                <Link className='my-5' to='/'> <Button label='Back To Main Page' /> </Link>\n            {/* </Box> */}\n\n            </Box>\n\n\n\n       \n\n            </Box>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Box , Text, Button, Image} from 'grommet'\nimport { Row, Col } from 'react-bootstrap'\nimport {Cart} from 'grommet-icons'\nimport {Link} from 'react-router-dom'\n\nexport default class ItemPage extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state ={\n            item: {},\n            quantity:1\n        }\n    }\n\n    componentWillMount(){\n        const allItems = this.props.allItems\n\n        const itemId = this.props.match.params.id\n\n        let theItem = {}\n\n        allItems.forEach(item =>{\n            if (item.id == itemId)\n                theItem = item\n            \n        })\n\n        this.setState({\n            item: theItem\n        })\n\n        // console.log(theItem)\n\n\n    }\n\n    handleChange(e){\n\n        console.log(e.target.value)\n\n        let newItem = this.state.item\n        newItem.quantity = e.target.value\n        this.setState({\n            item: newItem,\n            quantity:e.target.value\n        })\n\n    }\n\n    \n\n    render() {\n        return (\n            <Box  margin=\"large\" border=\"all\" height=\"xlarge\">\n                <Row>\n                    <Col>\n                    <Box margin='large' >\n\n                <Image\n                src={this.state.item.img}\n                fit='contain'\n                />\n                </Box>\n                    </Col>\n\n                    <Col>\n                    <Box align='end' margin='large'>\n\n            <Text size=\"xxlarge\">{this.state.item.name}</Text>\n            <div className=\"mt-5\">\n\n        <Text>{this.state.item.desc}</Text>\n            </div>\n                    </Box>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                    <Box align=\"center\">\n\n                    <label>Quantity:</label>\n                    <input onChange={(e)=>this.handleChange(e)} type=\"number\" value={this.state.quantity}/>\n\n                <Box width='medium' margin=\"medium\"> \n                <Link to='/thanks'>\n\n\n                    <Button\n                    label=\"Add to Cart\"\n                    icon={<Cart />}\n                    color='accent-1'\n                    primary\n                    fill='true'   \n                    \n                    onClick={() =>  this.props.addItem(this.state.item)}\n                    \n                    \n                    />\n                    </Link>\n                    </Box>\n                    </Box>\n                    </Col>\n                </Row>\n\n            </Box>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Checkmark} from 'grommet-icons'\nimport { Box, Text , Button} from 'grommet'\nimport { Link } from 'react-router-dom'\nexport default class ThankyouPage extends Component {\n    render() {\n        return (\n            <div className=\"mt-5\">\n\n            <Box align='center' margin='xlarge' border='all'>\n                <div className=\"m-5\">\n\n                <Text size='xlarge'>Thank You</Text>\n                </div>\n\n                <div className=\"mb-5\">\n\n                <Checkmark size=\"xlarge\"/>\n                </div>\n\n                <Link to='/cart'> <Button primary color='accent-1' label=\"To Cart?\"/></Link>\n\n                <Box margin='large'>\n                    <Link to='/'><Button primary color='accent-1' label=\"To Main Page?\"/></Link>\n                </Box>\n\n\n            </Box>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Box, Text, RoutedAnchor, Button } from 'grommet';\nimport { Form, TextInputField, PasswordInputField, EmailInputField, CheckBoxField, validators } from 'grommet-controls';\nimport { Link } from 'react-router-dom';\n\nexport default class Signup extends Component {\n\n\n    constructor(props){\n        super(props)\n    }\n\n\n    render() {\n        return (\n            <Box align='center' margin='large'>\n                <Box align='center'>\n                <Form\n    basis='medium'\n    focusFirstChild={false}\n    \n  >\n    <TextInputField label='User name' name='username' validation={[validators.required()]} />\n    <EmailInputField label='Email' name='email' validation={[validators.required(), validators.email()]} />\n    <PasswordInputField\n      label='Password'\n      name='password'\n      validation={\n        [validators.required(), validators.minLength(5), validators.alphaNumeric()]\n      }\n    />\n    <PasswordInputField\n      label='Confirm Password'\n      name='password1'\n      validation={[validators.equalsField('password')]}\n    />\n    <CheckBoxField\n      controlLabel={(\n        <Box direction='row' gap='xsmall' align='center'>\n          Agree to\n          <RoutedAnchor path='/terms_of_service' label='terms of service' />\n        </Box>\n      )}\n      description='Terms of service'\n      name='accept_tos'\n      validation={[validators.required(), validators.True('Please accept our TOS')]}\n    />\n    <Box pad={{ vertical: 'medium' }} align='end'>\n      <Link to='/'> <Button hoverIndicator='background' primary={true} onClick={()=>this.props.signin()} label='Save profile' /></Link>\n    </Box>\n    <Box direction='row' alignSelf='center' gap='small' align='center'>\n      <Text>\n        {'Already have an account?'}\n      </Text>\n      <RoutedAnchor path='/login' label='Sign in' />\n    </Box>\n  </Form>\n                </Box>\n            </Box>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Grommet,Anchor, Box, Stack, Text, Button} from 'grommet'\nimport MainPage from './components/MainPage.js'\nimport Navbar from './components/Navbar'\nimport {Route,BrowserRouter as Router, Switch, Link} from 'react-router-dom'\nimport {Cart} from 'grommet-icons'\nimport CartPage from './components/CartPage'\nimport ItemPage from './components/ItemPage'\nimport Faker from 'faker'\nimport ThankyouPage from './components/ThankyouPage.js'\nimport Login from './components/authantication/Login.js'\nimport Signup from './components/authantication/Signup.js'\n\nexport default class App extends Component {\n\n\n  constructor(props){\n    super(props)\n    this.state = {\n      cart:[],\n      items: [],\n      loggedin: false,\n      navCon: <div></div>\n  }\n\n  this.addItem = this.addItem.bind(this)\n  this.removeItem = this.removeItem.bind(this)\n  this.signin = this.signin.bind(this)\n  this.checkout = this.checkout.bind(this)\n  }\n\n\ncomponentWillMount(){\n  let randItems = []\n\n  for (let i = 0; i < 30; i++){\n      randItems.push({\n          name: Faker.name.title(),\n          price: Faker.finance.amount(),\n          img: Faker.image.food(),\n          desc: Faker.lorem.paragraph(),\n          id: Faker.random.number(),\n          quantity: 1\n  \n      })\n    }\n        \n\nlet content\n        if(this.state.loggedin){\n          content =  <ul className=\"navbar-nav\">\n            \n      <li className=\"nav-item active\">\n\n      <Link className=\"nav-link\" to='/'><Text size='large'> Log Out</Text></Link>\n</li>      \n      \n      </ul>\n        }\n        \n\n        this.setState({\n          items: randItems\n        })\n\n        \n}\n\nsignin(){\n\n\n  console.log('signed inn')\n\n  this.setState({\n    loggedin: true\n  })\n}\n\nrenderCon(){\n  let l\n  if(this.state.loggedin)\n    l = <ul className=\"navbar-nav\">\n            \n    <li className=\"nav-item active\">\n\n    <Link className=\"nav-link\" to='/' onClick={()=> this.logout()}> <Text size='large'> Log Out</Text></Link>\n</li>      \n    \n    </ul>\n\n    else \n        l = <ul className=\"navbar-nav\">\n        \n  <li className=\"nav-item active\">\n  <Link className=\"nav-link\" to='/login'><Text color='light'> Log In</Text></Link>  \n  </li>\n  <li className=\"nav-item active\">\n\n  <Link className=\"nav-link\" to='/signup'><Text color='light'> Sign Up</Text></Link>  \n  </li>\n  </ul>\n\n  return l\n}\n\nlogout(){\n  this.setState({\n    loggedin: false\n  })\n}\n\naddItem(item){\n  let curCart = this.state.cart\n\n\n  curCart.push(item)\n\n  this.setState({\n    cart: curCart\n  })\n\n  console.log(this)\n}\n\ncheckout(){\n  this.setState({\n    cart: []\n  })\n}\n\n\nremoveItem(item){\n\n        \n  let currentCart = this.state.cart\n\n  let newCart = currentCart.filter(i => {\n      return i.name != item.name\n  })\n\n  this.setState({\n      cart: newCart\n  })\n}\n\n\n  render() {\n    return (\n      <Grommet plain>\n  \n        <Router>\n\n\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <a className=\"navbar-brand\">Azzam's Shop</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <Link className=\"nav-link\" to='/'> <Text size=\"large\"> Home</Text> </Link>\n      </li>\n      {/* <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">About</a>\n      </li> */}\n\n     \n\n    </ul>\n\n    <Anchor size='large' color='brand' reverse  icon={<Stack anchor=\"top-right\">\n          <Link to='/cart'> <Cart size=\"large\" /> </Link>\n        <Box\n          background=\"brand\"\n          pad={{ horizontal: 'xsmall' }}\n          round\n          >\n          <Text>{this.state.cart.length}</Text>\n        </Box>\n      </Stack>}\n      />\n      {this.renderCon()}\n    \n    \n  </div>\n</nav>\n\n\n\n\n        <Switch>\n          <Route exact path='/' component={() => <MainPage items={this.state.items} />} />\n          <Route path='/cart' component={()=> <CartPage checkOut={this.checkout} itemRemover={this.removeItem} cart={this.state.cart} />}/>\n          <Route path=\"/item/:id\" render={ props => <ItemPage {...props} addItem={this.addItem} allItems={this.state.items}/>}/>\n          <Route path=\"/thanks\" component={ThankyouPage}/>\n          <Route path=\"/login\" component={()=> <Login signin={this.signin}/>}/>\n          <Route path=\"/signup\" component={()=> <Signup signin={this.signin}/>}/>\n\n        </Switch>\n\n\n      </Router>\n      </Grommet>\n      \n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'bootswatch/dist/lux/bootstrap.min.css'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}